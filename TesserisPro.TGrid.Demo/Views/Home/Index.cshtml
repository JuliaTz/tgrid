@{
    ViewBag.Title = "TGrid Demo";
}
<link rel="stylesheet" type="text/css" href="~/Styles/Grid.css">

<script src="~/Scripts/angular.js"></script>
<script src="~/Scripts/jquery-2.0.3.js"></script>
<script src="~/Scripts/knockout-2.3.0.js"></script>

<script src="~/Scripts/BaseHtmlProvider.js" type="text/javascript"></script>
<script src="~/Scripts/KnockoutHtmlProvider.js" type="text/javascript"></script>
<script src="~/Scripts/AngularHtmlProvider.js" type="text/javascript"></script>
<script src="~/Scripts/options.js" type="text/javascript"></script>
<script src="~/Scripts/ItemViewModel.js" type="text/javascript"></script>
<script src="~/Scripts/TGrid.js" type="text/javascript"></script>
<script src="~/Scripts/TGridBinding.js" type="text/javascript"></script>
<script src="~/Scripts/SortDescriptor.js" type="text/javascript"></script>
<script src="~/Scripts/FilterDescriptor.js" type="text/javascript"></script>
<script src="~/Scripts/GroupHeaderDescriptor.js" type="text/javascript"></script>
<script src="~/Scripts/utils.js" type="text/javascript"></script>

<h1>TGrid Demo</h1>

<h2>Pure JavaScript</h2>

<div id="test-pure-js">
    <script type="text/html">
        <column data-g-width="150" data-g-views="mobile,desktop">
            <header>
                <span>Name</span>
            </header>
            <cell>
                <span style="color: red;">test</span>
            </cell>
        </column>

        <column data-g-width="100" data-g-views="mobile,desktop">
            <header>Key</header>
            <cell />
        </column>

        <mobile>
            <div>
            </div>
        </mobile>

        <details></details>
    </script>
</div>

<script>
    $(function () {
        //var target = $("#test-pure-js");
        //var options = new TesserisPro.TGrid.Options(target,TesserisPro.TGrid.Framework.Knockout);
        //var grid = new TesserisPro.TGrid.Grid(target, options);
    });
</script>

<h2>Knockout</h2>

<div id="test-knockout" data-bind="tgrid: { provider: itemsProvider, pageSize: '0', selectMode: '1', groupBy: ['name','key'] }">
    <script type="text/html">
        <column data-g-width="150" data-g-views="mobile,desktop" data-g-sort-member="name">
            <header>
                <span style="color: red;" data-bind="text: nameColumnTitle"></span>
            </header>
            <cell>
                <span style="color: red;" data-bind="text: item.name"></span>
                <a href data-bind="click: function () { getCellDetailFor(0); }">[]</a>
            </cell>
            <celldetail>
                <div>
                    <span>Cell details: </span>
                    <span style="color: brown;" data-bind="text: item.detail_name"></span>
                </div>
            </celldetail>
        </column>
        <column data-g-width="100" data-g-views="mobile,desktop" data-g-sort-member="key">
            <header>Key</header>
            <cell>
                <span data-bind="text: item.key"></span>
                <a href data-bind="click: function () { getCellDetailFor(1); }">[]</a>
            </cell>
            <celldetail>
                <div>
                    <span>Cell details: </span>
                    <span style="color: brown;" data-bind="text: item.detail_key"></span>
                </div>
            </celldetail>
        </column>
        <column data-g-width="150" data-g-views="mobile,desktop" data-g-sort-member="key2">
            <header>
                <span>key2</span>
            </header>
            <cell>
                <span style="color: red;" data-bind="text: item.key2"></span>
            </cell>
            <celldetail>
                <div>
                    <span>Cell details key2: </span>
                    <span style="color: brown;" data-bind="text: item.detail_name"></span>
                </div>
            </celldetail>
        </column>

        <groupheader>
            <div>
                <span style="color: green;" data-bind="text: item.value"></span>
            </div>
        </groupheader>

        <mobile>
            <div>
                <span>Name: </span>
                <span style="color: red;" data-bind="text: item.name"></span>
                <a href data-bind="click: function () { getCellDetailFor(0); }">[]</a>
                <br />
                <span>Key: </span>
                <span style="color: red;" data-bind="text: item.key"></span>
                <a href data-bind="click: function () { getCellDetailFor(1); }">[]</a>
                <br />
                <span>Key2: </span>
                <span data-bind="text: item.key2"></span>
            </div>
        </mobile>

        <details>
            <div>
                <span>Row details: </span>
                <span style="color: blue;" data-bind="text: item.detail"></span>
            </div>
        </details>
    </script>
</div>

<script type="text/javascript">
    var SimpleItemsProvider = (function () {
        var items = [
                { name: "a1", key: "a4", key2: "a4", detail: "details item a1 a4", detail_name: "details item Name", detail_key: "details item Key" },
                { name: "a1", key: "a3", key2: "b4", detail: "details item b1 c3", detail_name: "details item Name", detail_key: "details item Key" },
                { name: "c1", key: "b3", key2: "a2", detail: "details item c1 b3", detail_name: "details item Name", detail_key: "details item Key" },
                { name: "a1", key: "a3", key2: "a3", detail: "details item a2 a3", detail_name: "details item Name", detail_key: "details item Key" },
                { name: "b2", key: "c2", key2: "a1", detail: "details item b2 c2", detail_name: "details item Name", detail_key: "details item Key" },
                { name: "c1", key: "b2", key2: "b4", detail: "details item c2 b2", detail_name: "details item Name", detail_key: "details item Key" },
                { name: "a4", key: "a2", key2: "b2", detail: "details item a3 a2", detail_name: "details item Name", detail_key: "details item Key" },
                { name: "b3", key: "c1", key2: "b1", detail: "details item b3 c1", detail_name: "details item Name", detail_key: "details item Key" },
                { name: "c3", key: "b1", key2: "c4", detail: "details item c3 b1", detail_name: "details item Name", detail_key: "details item Key" },
                { name: "a4", key: "a1", key2: "c2", detail: "details item a4 a1", detail_name: "details item Name", detail_key: "details item Key" }
        ];

        function SimpleItemsProvider() {
        }

        SimpleItemsProvider.prototype.getItems = function (firstItem, itemsNumber, callback) {
            callback(items.slice(firstItem, firstItem + itemsNumber), firstItem, itemsNumber);
        };

        SimpleItemsProvider.prototype.getTotalItemsCount = function (callback) {
            callback(items.length);
        };

        SimpleItemsProvider.prototype.getFilteredTotalItemsCount = function (filterDescriptors, callback) {
            callback(filtering(filterDescriptors).length);
        };

        SimpleItemsProvider.prototype.getFiltered = function (firstItem, itemsNumber, filterDescriptors, callback) {
            callback(filtering(filterDescriptors).slice(firstItem, firstItem + itemsNumber), firstItem, itemsNumber);
        };

        function filtering(filterDescriptors) {
            var filterdItems = [];
            for (var j = 0; j < items.length; j++) {
                for (var i = 0; i < filterDescriptors.length; i++) {
                    switch (filterDescriptors[i].column) {
                        case "name":
                            if (isFiltering(items[j].name, filterDescriptors[i].value, filterDescriptors[i].condition))
                                filterdItems.push(items[j]);
                            break;
                        case "key":
                            if (isFiltering(items[j].key, filterDescriptors[i].value, filterDescriptors[i].condition))
                                filterdItems.push(items[j]);
                            break;
                    }
                }
            }
            return filterdItems;
        }

        function isFiltering(item, value, condition) {
            switch (condition){
                case 1://equal
                    return (item == value);
                case 2://not equal
                    return (item != value);
            }
            return false;
        }

        SimpleItemsProvider.prototype.sort = function (sortDescriptor) {
            items.sort(function (a, b) {
                return sortingRecursive(a, b, sortDescriptor, 0);
            })
        };

        function sortingRecursive(a, b, sortDescriptor, i) {
            if (i != sortDescriptor.length - 1) {
                if (a[sortDescriptor[i].column] > b[sortDescriptor[i].column])
                    return sortingOrder(sortDescriptor[i]);
                if (b[sortDescriptor[i].column] > a[sortDescriptor[i].column])
                    return sortingOrderDesc(sortDescriptor[i]);
                return sortingRecursive(a, b, sortDescriptor, i + 1)
            } else {
                return a[sortDescriptor[i].column] > b[sortDescriptor[i].column] ? sortingOrder(sortDescriptor[i]) : sortingOrderDesc(sortDescriptor[i]);
            }
        }

        function sortingOrder(sortDescriptor) {
            return sortDescriptor.asc ? -1 : 1;
        }

        function sortingOrderDesc(sortDescriptor) {
            return sortDescriptor.asc ? 1 : -1;
        }

        function compareItems(item1, item2, columns) {
            for (var i = 0; i < columns.length; i++) {
                if (item1[columns[i]] != item2[columns[i]]) {
                    return false;
                }
            }

            return true;
        }

        return SimpleItemsProvider;
    })();

    function vm() {
        var self = this;
        self.nameColumnTitle = "Name";

        self.itemsProvider = new SimpleItemsProvider();
    };

    $(function () {
        ko.applyBindings(new vm());
    });
</script>

<h2>Angular</h2>

<TGrid id="test-angular">
    <script type="text/html">
        <column data-g-width="150" data-g-views="mobile,desktop" data-g-sort-member="name">
            <header>
                <span style="color: red;">{{nameColumnTitle}}</span>
            </header>
            <cell>
                <span style="color: red;">{{name}}</span>
            </cell>
            <celldetail>
                <div>
                    <span>Cell details: </span>
                    <span style="color: brown;">name</span>
                </div>
            </celldetail>
        </column>
        <column data-g-width="100" data-g-views="mobile,desktop" data-g-sort-member="key">
            <header>Key</header>
            <cell>
                <span style="color: red;">{{key}}</span>
            </cell>
            <celldetail>
                <div>
                    <span>Cell details: </span>
                    <span style="color: brown;">key</span>
                </div>
            </celldetail>
        </column>

        <groupheader>
            <div>
            </div>
        </groupheader>

        <mobile>
            <div>
            </div>
        </mobile>

        <details>
            <div>
            </div>
        </details>
    </script>
</TGrid>

<script type="text/javascript">
    var SimpleItemsProviderAngular = (function () {
        var items = [
            { "name": "a1", "key": "c2" },
            { "name": "b1", "key": "b2" },
            { "name": "c3", "key": "d2" },
            { "name": "d1", "key": "c2" },
            { "name": "e1", "key": "b2" },
            { "name": "f3", "key": "d2" },
            { "name": "g1", "key": "c2" },
            { "name": "j1", "key": "b2" },
            { "name": "k3", "key": "d2" },
            { "name": "l1", "key": "c2" },
            { "name": "m1", "key": "b2" },
            { "name": "n3", "key": "d2" },
            { "name": "o4", "key": "a2" }
        ];

        function SimpleItemsProvider() {
        }

        SimpleItemsProvider.prototype.getItems = function (firstItem, itemsNumber, callback) {
            callback(items.slice(firstItem, firstItem + itemsNumber), firstItem, itemsNumber);
        };

        SimpleItemsProvider.prototype.getTotalItemsCount = function (callback) {
            callback(items.length);
        };

        return SimpleItemsProvider;
    })();

    angular.module('App', [])
    .controller('Ctrl', function agrid($scope) {
        $scope.items = [
            { "name": "a1", "key": "c2" },
            { "name": "b1", "key": "b2" },
            { "name": "c3", "key": "d2" },
            { "name": "d1", "key": "c2" },
            { "name": "e1", "key": "b2" },
            { "name": "f3", "key": "d2" },
            { "name": "g1", "key": "c2" },
            { "name": "j1", "key": "b2" },
            { "name": "k3", "key": "d2" },
            { "name": "l1", "key": "c2" },
            { "name": "m1", "key": "b2" },
            { "name": "n3", "key": "d2" },
            { "name": "o4", "key": "a2" }
        ];
        $scope.nameColumnTitle = "name";

        $scope.itemsProvider = new SimpleItemsProviderAngular();
    })

    $(function () {
        //var id = $(document.getElementById('test-angular'));
        //var opt = new TesserisPro.TGrid.Options(id, TesserisPro.TGrid.Framework.Angular);
        //var grid = TesserisPro.TGrid.Grid(id, opt, new SimpleItemsProviderAngular());

        //angular.bootstrap(id, ['App']);
    })
</script>

<h2>Angular sample of result</h2>
<!--
<div>
    <div ng-app>
        <table ng-controller="ctrl" border="1">
            <thead>
                <tr>
                    <th ng-repeat="item in header"> {{item}}</th>
                </tr>
            </thead>
            <tbody>
                <tr ng-repeat="item in items">
                  <td>
                      {{item.Name}}
                  </td>
                  <td>
                      {{item.Key}}
                  </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

    -->

<script type="text/javascript">
    'use strict';
    function ctrl($scope) {
        $scope.header = ["name", "key"]
        $scope.items = [
                { "Name": "First ", "Key": "Last" },
                { "Name": "Second", "Key": "Last 1" }];
    }
</script>
